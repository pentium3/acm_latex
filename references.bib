@Book{arpachiDusseau18:osbook,
  author =       {Arpaci-Dusseau, Remzi H. and Arpaci-Dusseau Andrea C.},
  title =        {Operating Systems: Three Easy Pieces},
  publisher =    {Arpaci-Dusseau Books, LLC},
  year =         2015,
  edition =      {1.00},
  note =         {\url{http://pages.cs.wisc.edu/~remzi/OSTEP/}}
}
@InProceedings{waldspurger02,
  author =       {Waldspurger, Carl A.},
  title =        {Memory resource management in {VMware ESX} server},
  booktitle =    {USENIX Symposium on Operating System Design and
                  Implementation (OSDI)},
  year =         2002,
  pages =        {181--194},
  note =         {\url{https://www.usenix.org/legacy/event/osdi02/tech/waldspurger/waldspurger.pdf}}}
\end{filecontents}

@inproceedings{Chandramouli2018,
 author = {Chandramouli, Badrish and Prasaad, Guna and Kossmann, Donald and Levandoski, Justin and Hunter, James and Barnett, Mike},
 title = {{FASTER: A Concurrent Key-Value Store with In-Place Updates}},
 booktitle = {{Proceedings of the 2018 International Conference on Management of Data}},
 series = {SIGMOD '18},
 year = {2018},
 isbn = {978-1-4503-4703-7},
 location = {Houston, TX, USA},
 pages = {275--290},
 numpages = {16},
 url = {http://doi.acm.org/10.1145/3183713.3196898},
 doi = {10.1145/3183713.3196898},
 acmid = {3196898},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {concurrent, hash index, high performance, key-value store, latch-free, log-structured storage},
}


@inproceedings{lethedb,
	author = {Sarkar, Subhadeep and Papon, Tarikul Islam and Staratzis, Dimitris and Athanassoulis, Manos},
	title = {{Lethe: A Tunable Delete-Aware LSM Engine}},
	year = {2020},
	isbn = {9781450367356},
	publisher = {Association for Computing Machinery},
	address = {New York, NY, USA},
	url = {https://doi.org/10.1145/3318464.3389757},
	doi = {10.1145/3318464.3389757},
	booktitle = {Proceedings of the 2020 ACM SIGMOD International Conference on Management of Data},
	pages = {893â€“908},
	numpages = {16},
	keywords = {compaction, TTL-driven compaction, delete persistence threshold, compaction trigger, sort key, delete persistence latency, compaction policy, out-of-place deletes, interweaved storage layout, delete persistence, fade, delete key, lethe, kiwi, LSM-trees},
	location = {Portland, OR, USA},
	series = {SIGMOD '20}
}


@misc{rocksdb,
  title = "{RocksDB}",
  howpublished = {\url{https://rocksdb.org/}},
  note = "Last access: October 2021",
  date = "2021"
}

@misc{berkeleydb,
  title = "{Berkeley DB}",
  howpublished = {\url{https://www.oracle.com/database/technologies/related/berkeleydb.html}},
  note = "Last access: October 2021",
  date = "2021"
}


@online{rocksdb:tuning,
title = "{{RocksDB Tuning Guide}}",
url = "https://github.com/facebook/rocksdb/wiki/RocksDB-Tuning-Guide",
author = "Facebook",
date = "2019"
}

@online{leveldb,
title = "LevelDB",
url = "https://github.com/google/leveldb",
author = "Ghemawat, Sanjay and Dean, Jeff",
lastaccessed = "October 2019",
year =         "2019",
}


@article{WiscKey,
 author = {Lu, Lanyue and Pillai, Thanumalayan Sankaranarayana and Gopalakrishnan, Hariharan and Arpaci-Dusseau, Andrea C. and Arpaci-Dusseau, Remzi H.},
 title = {{WiscKey: Separating Keys from Values in SSD-Conscious Storage}},
 journal = {{ACM Transactions on Storage (TOS)}},
 issue_date = {March 2017},
 volume = {13},
 number = {1},
 month = mar,
 year = {2017},
 issn = {1553-3077},
 pages = {5:1--5:28},
 articleno = {5},
 numpages = {28},
 url = {http://doi.acm.org/10.1145/3033273},
 doi = {10.1145/3033273},
 acmid = {3033273},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {LevelDB, WiscKey, flash-based SSDs},
} 

@misc{kafka:rocksdb,
title = "{Kafka Streams Internal Data Management}",
howpublished = {\url{https://cwiki.apache.org/confluence/display/KAFKA/Kafka+Streams+Internal+Data+Management}},
note = "Last access: October 2021",
date = "2021"
}

@online{myrocks,
title = "{{A RocksDB storage engine with MySQL}}",
url = "http://myrocks.io/",
author = "MyRocks",
lastaccessed = "October 2019",
year =         "2019",
}


@inproceedings{Lim2011,
 author = {Lim, Hyeontaek and Fan, Bin and Andersen, David G. and Kaminsky, Michael},
 title = {{SILT: A Memory-efficient, High-performance Key-value Store}},
 booktitle = {{Proceedings of the Twenty-Third ACM Symposium on Operating Systems Principles}},
 series = {SOSP '11},
 year = {2011},
 isbn = {978-1-4503-0977-6},
 location = {Cascais, Portugal},
 pages = {1--13},
 numpages = {13},
 url = {http://doi.acm.org/10.1145/2043556.2043558},
 doi = {10.1145/2043556.2043558},
 acmid = {2043558},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {algorithms, design, flash, measurement, memory efficiency, performance},
}

@article{To:2018:SSM:3296598.3296611,
 author = {To, Quoc-Cuong and Soto, Juan and Markl, Volker},
 title = {A Survey of State Management in Big Data Processing Systems},
 journal = {The VLDB Journal},
 issue_date = {December  2018},
 volume = {27},
 number = {6},
 month = dec,
 year = {2018},
 issn = {1066-8888},
 pages = {847--872},
 numpages = {26},
 url = {https://doi.org/10.1007/s00778-018-0514-9},
 doi = {10.1007/s00778-018-0514-9},
 acmid = {3296611},
 publisher = {Springer-Verlag},
 address = {Berlin, Heidelberg},
 keywords = {Big data processing systems, State management, Survey},
} 

@inproceedings{DBLP:conf/vldb/ArasuCGMMRST04,
  author    = {Arvind Arasu and
               Mitch Cherniack and
               Eduardo F. Galvez and
               David Maier and
               Anurag Maskey and
               Esther Ryvkina and
               Michael Stonebraker and
               Richard Tibbetts},
  editor    = {Mario A. Nascimento and
               M. Tamer {\"{O}}zsu and
               Donald Kossmann and
               Ren{\'{e}}e J. Miller and
               Jos{\'{e}} A. Blakeley and
               K. Bernhard Schiefer},
  title     = {Linear Road: {A} Stream Data Management Benchmark},
  booktitle = {(e)Proceedings of the Thirtieth International Conference on Very Large
               Data Bases, {VLDB} 2004, Toronto, Canada, August 31 - September 3
               2004},
  pages     = {480--491},
  publisher = {Morgan Kaufmann},
  year      = {2004},
  url       = {http://www.vldb.org/conf/2004/RS12P1.PDF},
  doi       = {10.1016/B978-012088469-8.50044-9},
  timestamp = {Fri, 07 Jun 2019 12:44:01 +0200},
  biburl    = {https://dblp.org/rec/conf/vldb/ArasuCGMMRST04.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@article{Kallman:2008:HHD:1454159.1454211,
 author = {Kallman, Robert and Kimura, Hideaki and Natkins, Jonathan and Pavlo, Andrew and Rasin, Alexander and Zdonik, Stanley and Jones, Evan P. C. and Madden, Samuel and Stonebraker, Michael and Zhang, Yang and Hugg, John and Abadi, Daniel J.},
 title = {H-store: A High-performance, Distributed Main Memory Transaction Processing System},
 journal = {Proc. VLDB Endow.},
 issue_date = {August 2008},
 volume = {1},
 number = {2},
 month = aug,
 year = {2008},
 issn = {2150-8097},
 pages = {1496--1499},
 numpages = {4},
 url = {http://dx.doi.org/10.14778/1454159.1454211},
 doi = {10.14778/1454159.1454211},
 acmid = {1454211},
 publisher = {VLDB Endowment},
} 

@inproceedings{Chang2006,
archivePrefix = {arXiv},
arxivId = {arXiv:1011.1669v3},
author = {Chang, Fay and Dean, Jeffrey and Ghemawat, Sanjay and Hsieh, Wilson C. and Wallach, Deborah A. and Burrows, Mike and Chandra, Tushar and Fikes, Andrew and Gruber, Robert E.},
booktitle = {{Proceeding of the 7th Symposium on Operating Systems Design and Implementation}},
doi = {10.1145/1365815.1365816},
eprint = {arXiv:1011.1669v3},
isbn = {1931971471},
issn = {07342071},
title = {{Bigtable: A distributed storage system for structured data}},
year = {2006}
}

@inproceedings{Armbrust:2018:SSD:3183713.3190664,
 author = {Armbrust, Michael and Das, Tathagata and Torres, Joseph and Yavuz, Burak and Zhu, Shixiong and Xin, Reynold and Ghodsi, Ali and Stoica, Ion and Zaharia, Matei},
 title = {Structured Streaming: A Declarative API for Real-Time Applications in Apache Spark},
 booktitle = {Proceedings of the 2018 International Conference on Management of Data},
 series = {SIGMOD '18},
 year = {2018},
 isbn = {978-1-4503-4703-7},
 location = {Houston, TX, USA},
 pages = {601--613},
 numpages = {13},
 url = {http://doi.acm.org/10.1145/3183713.3190664},
 doi = {10.1145/3183713.3190664},
 acmid = {3190664},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {apache spark, programming models, stream processing},
} 

@inproceedings{CastroFernandez2013,
 author = {Castro Fernandez, Raul and Migliavacca, Matteo and Kalyvianaki, Evangelia and Pietzuch, Peter},
 title = {{Integrating Scale out and Fault Tolerance in Stream Processing Using Operator State Management}},
 booktitle = {{Proceedings of the 2013 ACM SIGMOD International Conference on Management of Data}},
 series = {SIGMOD '13},
 year = {2013},
 isbn = {978-1-4503-2037-5},
 location = {New York, New York, USA},
 pages = {725--736},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/2463676.2465282},
 doi = {10.1145/2463676.2465282},
 acmid = {2465282},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {fault tolerance, scalability, stateful stream processing},
}

@inproceedings{Lee:2018:HSS:3265723.3265739,
 author = {Lee, Gyewon and Eo, Jeongyoon and Seo, Jangho and Um, Taegeon and Chun, Byung-Gon},
 title = {High-Performance Stateful Stream Processing on Solid-State Drives},
 booktitle = {Proceedings of the 9th Asia-Pacific Workshop on Systems},
 series = {APSys '18},
 year = {2018},
 isbn = {978-1-4503-6006-7},
 location = {Jeju Island, Republic of Korea},
 pages = {9:1--9:7},
 articleno = {9},
 numpages = {7},
 url = {http://doi.acm.org/10.1145/3265723.3265739},
 doi = {10.1145/3265723.3265739},
 acmid = {3265739},
 publisher = {ACM},
 address = {New York, NY, USA},
} 

@article{Akidu2013,
 author = {Akidau, Tyler and Balikov, Alex and Bekiro\u{g}lu, Kaya and Chernyak, Slava and Haberman, Josh and Lax, Reuven and McVeety, Sam and Mills, Daniel and Nordstrom, Paul and Whittle, Sam},
 title = {{MillWheel: Fault-tolerant Stream Processing at Internet Scale}},
journal = {Proceedings of the the VLDB Endowment},
 issue_date = {August 2013},
 volume = {6},
 number = {11},
 month = aug,
 year = {2013},
 issn = {2150-8097},
 pages = {1033--1044},
 numpages = {12},
 url = {http://dx.doi.org/10.14778/2536222.2536229},
 doi = {10.14778/2536222.2536229},
 acmid = {2536229},
 publisher = {VLDB Endowment},
}

@article{Akidau2015,
author = {Akidau, Tyler and Bradshaw, Robert and Chambers, Craig and Chernyak, Slava and Fern{\'{a}}ndez-Moctezuma, Rafael J. and Lax, Reuven and McVeety, Sam and Mills, Daniel and Perry, Frances and Schmidt, Eric and Whittle, Sam},
doi = {10.14778/2824032.2824076},
issn = {2150-8097},
journal = {Proceedings of the VLDB Endowment},
pmid = {408614},
title = {{The Dataflow Model: A Practical Approach to Balancing Correctness, Latency, and Cost in Massive-scale, Unbounded, Out-of-order Data Processing}},
year = {2015}
}

@misc{flink,
  title = "{Apache Flink}",
  howpublished = {\url{https://flink.apache.org/}},
  note = "Last access: October 2021",
  date = "2021"
}

@online{databricks,
  author = "",
  year = "2019",
title = "{{Databricks Runtime}}",
url = "https://databricks.com/product/databricks-runtime",
  note = "Last access: October 2019",
  date = "2019"
}

@inproceedings{Mao:2012:CCF:2168836.2168855,
 author = {Mao, Yandong and Kohler, Eddie and Morris, Robert Tappan},
 title = {Cache Craftiness for Fast Multicore Key-value Storage},
 booktitle = {Proceedings of the 7th ACM European Conference on Computer Systems},
 series = {EuroSys '12},
 year = {2012},
 isbn = {978-1-4503-1223-3},
 location = {Bern, Switzerland},
 pages = {183--196},
 numpages = {14},
 url = {http://doi.acm.org/10.1145/2168836.2168855},
 doi = {10.1145/2168836.2168855},
 acmid = {2168855},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {in-memory, key-value, multicore, persistent},
} 

@inproceedings{DeCandia:2007:DAH:1294261.1294281,
 author = {DeCandia, Giuseppe and Hastorun, Deniz and Jampani, Madan and Kakulapati, Gunavardhan and Lakshman, Avinash and Pilchin, Alex and Sivasubramanian, Swaminathan and Vosshall, Peter and Vogels, Werner},
 title = {Dynamo: Amazon's Highly Available Key-value Store},
 booktitle = {Proceedings of Twenty-first ACM SIGOPS Symposium on Operating Systems Principles},
 series = {SOSP '07},
 year = {2007},
 isbn = {978-1-59593-591-5},
 location = {Stevenson, Washington, USA},
 pages = {205--220},
 numpages = {16},
 url = {http://doi.acm.org/10.1145/1294261.1294281},
 doi = {10.1145/1294261.1294281},
 acmid = {1294281},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {performance, reliability, scalability},
}


@online{hbase,
  author = "",
  year = "2019",
title = "{{Apache HBase}}",
url = "https://hbase.apache.org",
  note = "Last access: October 2019",
  date = "2019"
}

@inproceedings{Balmau:2017:FUM:3064176.3064193,
 author = {Balmau, Oana and Guerraoui, Rachid and Trigonakis, Vasileios and Zablotchi, Igor},
 title = {FloDB: Unlocking Memory in Persistent Key-Value Stores},
 booktitle = {Proceedings of the Twelfth European Conference on Computer Systems},
 series = {EuroSys '17},
 year = {2017},
 isbn = {978-1-4503-4938-3},
 location = {Belgrade, Serbia},
 pages = {80--94},
 numpages = {15},
 url = {http://doi.acm.org/10.1145/3064176.3064193},
 doi = {10.1145/3064176.3064193},
 acmid = {3064193},
 publisher = {ACM},
 address = {New York, NY, USA},
} 

@inproceedings{Adya:2019:FKS:3317550.3321434,
 author = {Adya, Atul and Grandl, Robert and Myers, Daniel and Qin, Henry},
 title = {Fast Key-value Stores: An Idea Whose Time Has Come and Gone},
 booktitle = {Proceedings of the Workshop on Hot Topics in Operating Systems},
 series = {HotOS '19},
 year = {2019},
 isbn = {978-1-4503-6727-1},
 location = {Bertinoro, Italy},
 pages = {113--119},
 numpages = {7},
 url = {http://doi.acm.org/10.1145/3317550.3321434},
 doi = {10.1145/3317550.3321434},
 acmid = {3321434},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {Caches, Distributed Systems, Key-Value Stores},
} 

@inproceedings{Golan-Gueta:2015:SCL:2741948.2741973,
 author = {Golan-Gueta, Guy and Bortnikov, Edward and Hillel, Eshcar and Keidar, Idit},
 title = {Scaling Concurrent Log-structured Data Stores},
 booktitle = {Proceedings of the Tenth European Conference on Computer Systems},
 series = {EuroSys '15},
 year = {2015},
 isbn = {978-1-4503-3238-5},
 location = {Bordeaux, France},
 pages = {32:1--32:14},
 articleno = {32},
 numpages = {14},
 url = {http://doi.acm.org/10.1145/2741948.2741973},
 doi = {10.1145/2741948.2741973},
 acmid = {2741973},
 publisher = {ACM},
 address = {New York, NY, USA},
} 

@inproceedings{Moritz:2018:RDF:3291168.3291210,
 author = {Moritz, Philipp and Nishihara, Robert and Wang, Stephanie and Tumanov, Alexey and Liaw, Richard and Liang, Eric and Elibol, Melih and Yang, Zongheng and Paul, William and Jordan, Michael I. and Stoica, Ion},
 title = {Ray: A Distributed Framework for Emerging AI Applications},
 booktitle = {Proceedings of the 12th USENIX Conference on Operating Systems Design and Implementation},
 series = {OSDI'18},
 year = {2018},
 isbn = {978-1-931971-47-8},
 location = {Carlsbad, CA, USA},
 pages = {561--577},
 numpages = {17},
 url = {http://dl.acm.org/citation.cfm?id=3291168.3291210},
 acmid = {3291210},
 publisher = {USENIX Association},
 address = {Berkeley, CA, USA},
} 

@book{DBLP:reference/db/2009,
  editor    = {Ling Liu and
               M. Tamer {\"{O}}zsu},
  title     = {Encyclopedia of Database Systems},
  publisher = {Springer {US}},
  year      = {2009},
  url       = {https://doi.org/10.1007/978-0-387-39940-9},
  doi       = {10.1007/978-0-387-39940-9},
  isbn      = {978-0-387-35544-3},
  timestamp = {Sun, 02 Jun 2019 21:10:27 +0200},
  biburl    = {https://dblp.org/rec/bib/reference/db/2009},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{DBLP:conf/cidr/MotwaniWABBDMORV03,
  author    = {Rajeev Motwani and
               Jennifer Widom and
               Arvind Arasu and
               Brian Babcock and
               Shivnath Babu and
               Mayur Datar and
               Gurmeet Singh Manku and
               Chris Olston and
               Justin Rosenstein and
               Rohit Varma},
  title     = {Query Processing, Approximation, and Resource Management in a Data
               Stream Management System},
  booktitle = {{CIDR} 2003, First Biennial Conference on Innovative Data Systems
               Research, Asilomar, CA, USA, January 5-8, 2003, Online Proceedings},
  year      = {2003},
  url       = {http://www-db.cs.wisc.edu/cidr/cidr2003/program/p22.pdf},
  timestamp = {Thu, 02 Feb 2017 11:13:04 +0100},
  biburl    = {https://dblp.org/rec/bib/conf/cidr/MotwaniWABBDMORV03},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{Krompass:2009:MLQ:1516360.1516377,
 author = {Krompass, Stefan and Kuno, Harumi and Wiener, Janet L. and Wilkinson, Kevin and Dayal, Umeshwar and Kemper, Alfons},
 title = {Managing Long-running Queries},
 booktitle = {Proceedings of the 12th International Conference on Extending Database Technology: Advances in Database Technology},
 series = {EDBT '09},
 year = {2009},
 isbn = {978-1-60558-422-5},
 location = {Saint Petersburg, Russia},
 pages = {132--143},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/1516360.1516377},
 doi = {10.1145/1516360.1516377},
 acmid = {1516377},
 publisher = {ACM},
 address = {New York, NY, USA},
} 

@INPROCEEDINGS{1260804, 
author={J. {Kang} and J. F. {Naughton} and S. D. {Viglas}}, 
booktitle={Proceedings 19th International Conference on Data Engineering (Cat. No.03CH37405)}, 
title={Evaluating window joins over unbounded streams}, 
year={2003}, 
volume={}, 
number={}, 
pages={341-352}, 
keywords={query processing;optimisation;resource allocation;query formulation;sliding window join evaluation;unbounded stream;unit-time-basis cost model;hash join;nested-loops join;symmetric join algorithm implementation;system resource;input stream;memory allocation;Data engineering}, 
doi={10.1109/ICDE.2003.1260804}, 
ISSN={}, 
month={March},}

@inproceedings{Chandramouli:2007:QSR:1247480.1247542,
 author = {Chandramouli, Badrish and Bond, Christopher N. and Babu, Shivnath and Yang, Jun},
 title = {Query Suspend and Resume},
 booktitle = {Proceedings of the 2007 ACM SIGMOD International Conference on Management of Data},
 series = {SIGMOD '07},
 year = {2007},
 isbn = {978-1-59593-686-8},
 location = {Beijing, China},
 pages = {557--568},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/1247480.1247542},
 doi = {10.1145/1247480.1247542},
 acmid = {1247542},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {optimization, processing, query, resume, suspend},
} 


@INPROCEEDINGS{4274966, 
author={J. {Wu} and K. {Tan} and Y. {Zhou}}, 
booktitle={19th International Conference on Scientific and Statistical Database Management (SSDBM 2007)}, 
title={Window-Oblivious Join: A Data-Driven Memory Management Scheme for Stream Join}, 
year={2007}, 
volume={}, 
number={}, 
pages={21-21}, 
keywords={data analysis;query processing;storage management;data-driven memory management scheme;stream window-oblivious join processing;query processing;buffer allocation;Memory management;Sensor phenomena and characterization;Network topology;Delay;Concrete;Wireless sensor networks;Transmitters;Network synthesis;Signal synthesis;Coordinate measuring machines}, 
doi={10.1109/SSDBM.2007.43}, 
ISSN={}, 
month={July},}

@inproceedings{Viglas:2003:MOR:1315451.1315477,
 author = {Viglas, Stratis D. and Naughton, Jeffrey F. and Burger, Josef},
 title = {Maximizing the Output Rate of Multi-way Join Queries over Streaming Information Sources},
 booktitle = {Proceedings of the 29th International Conference on Very Large Data Bases - Volume 29},
 series = {VLDB '03},
 year = {2003},
 isbn = {0-12-722442-4},
 location = {Berlin, Germany},
 pages = {285--296},
 numpages = {12},
 url = {http://dl.acm.org/citation.cfm?id=1315451.1315477},
 acmid = {1315477},
 publisher = {VLDB Endowment},
} 

@article{DBLP:journals/debu/UrhanF00,
  author    = {Tolga Urhan and
               Michael J. Franklin},
  title     = {XJoin: {A} Reactively-Scheduled Pipelined Join Operator},
  journal   = {{IEEE} Data Eng. Bull.},
  volume    = {23},
  number    = {2},
  pages     = {27--33},
  year      = {2000},
  url       = {http://sites.computer.org/debull/A00JUN-CD.pdf},
  timestamp = {Wed, 19 Dec 2007 09:29:12 +0100},
  biburl    = {https://dblp.org/rec/bib/journals/debu/UrhanF00},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{Mokbel:2004:HJN:977401.978115,
 author = {Mokbel, Mohamed F. and Lu, Ming and Aref, Walid G.},
 title = {Hash-Merge Join: A Non-blocking Join Algorithm for Producing Fast and Early Join Results},
 booktitle = {Proceedings of the 20th International Conference on Data Engineering},
 series = {ICDE '04},
 year = {2004},
 isbn = {0-7695-2065-0},
 pages = {251--},
 url = {http://dl.acm.org/citation.cfm?id=977401.978115},
 acmid = {978115},
 publisher = {IEEE Computer Society},
 address = {Washington, DC, USA},
} 

@inproceedings{Tatbul:2003:LSD:1315451.1315479,
 author = {Tatbul, Nesime and \c{C}etintemel, U\u{g}ur and Zdonik, Stan and Cherniack, Mitch and Stonebraker, Michael},
 title = {Load Shedding in a Data Stream Manager},
 booktitle = {Proceedings of the 29th International Conference on Very Large Data Bases - Volume 29},
 series = {VLDB '03},
 year = {2003},
 isbn = {0-12-722442-4},
 location = {Berlin, Germany},
 pages = {309--320},
 numpages = {12},
 url = {http://dl.acm.org/citation.cfm?id=1315451.1315479},
 acmid = {1315479},
 publisher = {VLDB Endowment},
} 

@online{rethinking_streaming,
title = "{{Rethinking Streaming: Correct State Matters!}}",
url = "http://istc-bigdata.org/index.php/rethinking-streaming-correct-state-matters/",
note = "Last access: September 2019",
author = "{Nesime Tatbul and Kristin Tufte and Stan Zdonik}",
date = "2016"
}

@online{plasma,
title = "{{Plasma In-Memory Object Store}}",
url = "http://arrow.apache.org/blog/2017/08/08/plasma-in-memory-object-store/",
note = "Last access: September 2019",
author = "{Philipp Moritz and Robert Nishihara}",
year = "2019"
}

@article{O'Neil:1996:LM:230823.230826,
 author = {O'Neil, Patrick and Cheng, Edward and Gawlick, Dieter and O'Neil, Elizabeth},
 title = {The Log-structured Merge-tree (LSM-tree)},
 journal = {Acta Inf.},
 issue_date = {1996},
 volume = {33},
 number = {4},
 month = jun,
 year = {1996},
 issn = {0001-5903},
 pages = {351--385},
 numpages = {35},
 url = {http://dx.doi.org/10.1007/s002360050048},
 doi = {10.1007/s002360050048},
 acmid = {230826},
 publisher = {Springer-Verlag New York, Inc.},
 address = {Secaucus, NJ, USA},
} 

@article{Dayan:2018:OBF:3298792.3276980,
 author = {Dayan, Niv and Athanassoulis, Manos and Idreos, Stratos},
 title = {Optimal Bloom Filters and Adaptive Merging for LSM-Trees},
 journal = {ACM Trans. Database Syst.},
 issue_date = {December 2018},
 volume = {43},
 number = {4},
 month = dec,
 year = {2018},
 issn = {0362-5915},
 pages = {16:1--16:48},
 articleno = {16},
 numpages = {48},
 url = {http://doi.acm.org/10.1145/3276980},
 doi = {10.1145/3276980},
 acmid = {3276980},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {Bloom filters, LSM-tree, NoSQL, key-value stores, system design},
} 

@inproceedings{Liu:2006:ROS:1142473.1142513,
 author = {Liu, Bin and Zhu, Yali and Rundensteiner, Elke},
 title = {Run-time Operator State Spilling for Memory Intensive Long-running Queries},
 booktitle = {Proceedings of the 2006 ACM SIGMOD International Conference on Management of Data},
 series = {SIGMOD '06},
 year = {2006},
 isbn = {1-59593-434-0},
 location = {Chicago, IL, USA},
 pages = {347--358},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/1142473.1142513},
 doi = {10.1145/1142473.1142513},
 acmid = {1142513},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {data partitions, data streams, long running queries, state spill, stateful operators},
} 

@inproceedings{Sears:2012:BGP:2213836.2213862,
 author = {Sears, Russell and Ramakrishnan, Raghu},
 title = {bLSM: A General Purpose Log Structured Merge Tree},
 booktitle = {Proceedings of the 2012 ACM SIGMOD International Conference on Management of Data},
 series = {SIGMOD '12},
 year = {2012},
 isbn = {978-1-4503-1247-9},
 location = {Scottsdale, Arizona, USA},
 pages = {217--228},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/2213836.2213862},
 doi = {10.1145/2213836.2213862},
 acmid = {2213862},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {log structured merge tree, merge scheduling, read amplification, read fanout, write amplification},
} 


@article{Lu:2017:WSK:3054178.3033273,
 author = {Lu, Lanyue and Pillai, Thanumalayan Sankaranarayana and Gopalakrishnan, Hariharan and Arpaci-Dusseau, Andrea C. and Arpaci-Dusseau, Remzi H.},
 title = {WiscKey: Separating Keys from Values in SSD-Conscious Storage},
 journal = {ACM Trans. Storage},
 issue_date = {March 2017},
 volume = {13},
 number = {1},
 month = mar,
 year = {2017},
 issn = {1553-3077},
 pages = {5:1--5:28},
 articleno = {5},
 numpages = {28},
 url = {http://doi.acm.org/10.1145/3033273},
 doi = {10.1145/3033273},
 acmid = {3033273},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {LevelDB, WiscKey, flash-based SSDs},
} 

@inproceedings{Lim:2011:SMH:2043556.2043558,
 author = {Lim, Hyeontaek and Fan, Bin and Andersen, David G. and Kaminsky, Michael},
 title = {SILT: A Memory-efficient, High-performance Key-value Store},
 booktitle = {Proceedings of the Twenty-Third ACM Symposium on Operating Systems Principles},
 series = {SOSP '11},
 year = {2011},
 isbn = {978-1-4503-0977-6},
 location = {Cascais, Portugal},
 pages = {1--13},
 numpages = {13},
 url = {http://doi.acm.org/10.1145/2043556.2043558},
 doi = {10.1145/2043556.2043558},
 acmid = {2043558},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {algorithms, design, flash, measurement, memory efficiency, performance},
}

@inproceedings{Jin:2017:NBK:3132747.3132764,
 author = {Jin, Xin and Li, Xiaozhou and Zhang, Haoyu and Soul{\'e}, Robert and Lee, Jeongkeun and Foster, Nate and Kim, Changhoon and Stoica, Ion},
 title = {NetCache: Balancing Key-Value Stores with Fast In-Network Caching},
 booktitle = {Proceedings of the 26th Symposium on Operating Systems Principles},
 series = {SOSP '17},
 year = {2017},
 isbn = {978-1-4503-5085-3},
 location = {Shanghai, China},
 pages = {121--136},
 numpages = {16},
 url = {http://doi.acm.org/10.1145/3132747.3132764},
 doi = {10.1145/3132747.3132764},
 acmid = {3132764},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {Caching, Key-value stores, Programmable switches},
} 

@inproceedings{Fan:2013:MCC:2482626.2482662,
 author = {Fan, Bin and Andersen, David G. and Kaminsky, Michael},
 title = {MemC3: Compact and Concurrent MemCache with Dumber Caching and Smarter Hashing},
 booktitle = {Proceedings of the 10th USENIX Conference on Networked Systems Design and Implementation},
 series = {nsdi'13},
 year = {2013},
 location = {Lombard, IL},
 pages = {371--384},
 numpages = {14},
 url = {http://dl.acm.org/citation.cfm?id=2482626.2482662},
 acmid = {2482662},
 publisher = {USENIX Association},
 address = {Berkeley, CA, USA},
} 

@inproceedings{Lim:2014:MHA:2616448.2616488,
 author = {Lim, Hyeontaek and Han, Dongsu and Andersen, David G. and Kaminsky, Michael},
 title = {MICA: A Holistic Approach to Fast In-memory Key-value Storage},
 booktitle = {Proceedings of the 11th USENIX Conference on Networked Systems Design and Implementation},
 series = {NSDI'14},
 year = {2014},
 isbn = {978-1-931971-09-6},
 location = {Seattle, WA},
 pages = {429--444},
 numpages = {16},
 url = {http://dl.acm.org/citation.cfm?id=2616448.2616488},
 acmid = {2616488},
 publisher = {USENIX Association},
 address = {Berkeley, CA, USA},
} 


@inproceedings{Vasudevan:2012:UVI:2391229.2391237,
 author = {Vasudevan, Vijay and Kaminsky, Michael and Andersen, David G.},
 title = {Using Vector Interfaces to Deliver Millions of IOPS from a Networked Key-value Storage Server},
 booktitle = {Proceedings of the Third ACM Symposium on Cloud Computing},
 series = {SoCC '12},
 year = {2012},
 isbn = {978-1-4503-1761-0},
 location = {San Jose, California},
 pages = {8:1--8:13},
 articleno = {8},
 numpages = {13},
 url = {http://doi.acm.org/10.1145/2391229.2391237},
 doi = {10.1145/2391229.2391237},
 acmid = {2391237},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {key-value storage, measurement, non-volatile memory, performance},
} 

@inproceedings{Nishtala:2013:SMF:2482626.2482663,
 author = {Nishtala, Rajesh and Fugal, Hans and Grimm, Steven and Kwiatkowski, Marc and Lee, Herman and Li, Harry C. and McElroy, Ryan and Paleczny, Mike and Peek, Daniel and Saab, Paul and Stafford, David and Tung, Tony and Venkataramani, Venkateshwaran},
 title = {Scaling Memcache at Facebook},
 booktitle = {Proceedings of the 10th USENIX Conference on Networked Systems Design and Implementation},
 series = {nsdi'13},
 year = {2013},
 location = {Lombard, IL},
 pages = {385--398},
 numpages = {14},
 url = {http://dl.acm.org/citation.cfm?id=2482626.2482663},
 acmid = {2482663},
 publisher = {USENIX Association},
 address = {Berkeley, CA, USA},
} 

@inproceedings{Li:2015:AAB:2749469.2750416,
 author = {Li, Sheng and Lim, Hyeontaek and Lee, Victor W. and Ahn, Jung Ho and Kalia, Anuj and Kaminsky, Michael and Andersen, David G. and Seongil, O. and Lee, Sukhan and Dubey, Pradeep},
 title = {Architecting to Achieve a Billion Requests Per Second Throughput on a Single Key-value Store Server Platform},
 booktitle = {Proceedings of the 42Nd Annual International Symposium on Computer Architecture},
 series = {ISCA '15},
 year = {2015},
 isbn = {978-1-4503-3402-0},
 location = {Portland, Oregon},
 pages = {476--488},
 numpages = {13},
 url = {http://doi.acm.org/10.1145/2749469.2750416},
 doi = {10.1145/2749469.2750416},
 acmid = {2750416},
 publisher = {ACM},
 address = {New York, NY, USA},
} 

@inproceedings{Kalia:2014:URE:2619239.2626299,
 author = {Kalia, Anuj and Kaminsky, Michael and Andersen, David G.},
 title = {Using RDMA Efficiently for Key-value Services},
 booktitle = {Proceedings of the 2014 ACM Conference on SIGCOMM},
 series = {SIGCOMM '14},
 year = {2014},
 isbn = {978-1-4503-2836-4},
 location = {Chicago, Illinois, USA},
 pages = {295--306},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/2619239.2626299},
 doi = {10.1145/2619239.2626299},
 acmid = {2626299},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {RDMA, ROCE, infiniband, key-value stores},
} 


@inproceedings{Li:2017:KHI:3132747.3132756,
 author = {Li, Bojie and Ruan, Zhenyuan and Xiao, Wencong and Lu, Yuanwei and Xiong, Yongqiang and Putnam, Andrew and Chen, Enhong and Zhang, Lintao},
 title = {KV-Direct: High-Performance In-Memory Key-Value Store with Programmable NIC},
 booktitle = {Proceedings of the 26th Symposium on Operating Systems Principles},
 series = {SOSP '17},
 year = {2017},
 isbn = {978-1-4503-5085-3},
 location = {Shanghai, China},
 pages = {137--152},
 numpages = {16},
 url = {http://doi.acm.org/10.1145/3132747.3132756},
 doi = {10.1145/3132747.3132756},
 acmid = {3132756},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {Key-Value Store, Performance, Programmable Hardware},
} 

@article{Noghabi:2017:SSS:3137765.3137770,
 author = {Noghabi, Shadi A. and Paramasivam, Kartik and Pan, Yi and Ramesh, Navina and Bringhurst, Jon and Gupta, Indranil and Campbell, Roy H.},
 title = {Samza: Stateful Scalable Stream Processing at LinkedIn},
 journal = {Proc. VLDB Endow.},
 issue_date = {August 2017},
 volume = {10},
 number = {12},
 month = aug,
 year = {2017},
 issn = {2150-8097},
 pages = {1634--1645},
 numpages = {12},
 url = {https://doi.org/10.14778/3137765.3137770},
 doi = {10.14778/3137765.3137770},
 acmid = {3137770},
 publisher = {VLDB Endowment},
} 


@online{samza,
title = "{{Samza}}",
url = "https://samza.apache.org/",
note = "Accessed on 6th March 2019",
author = "{Apache}",
date = "2019"
}

@inproceedings{Toshniwal2014,
author = {Toshniwal, Ankit and Taneja, Siddarth and Shukla, Amit and Ramasamy, Karthik and Patel, Jignesh M. and Kulkarni, Sanjeev and Jackson, Jason and Gade, Krishna and Fu, Maosong and Donham, Jake and Bhagat, Nikunj and Mittal, Sailesh and Ryaboy, Dmitriy},
booktitle = {{Proceedings of the 2014 ACM SIGMOD international conference on Management of data (SIGMOD '14)}},
doi = {10.1145/2588555.2595641},
isbn = {9781450323765},
keywords = {real-time query processing,stream data management},
title = {{Storm @Twitter}},
year = {2014}
}

@inproceedings{Kulkarni2015,
author = {Kulkarni, Sanjeev and Bhagat, Nikunj and Fu, Masong and Kedigehalli, Vikas and Kellogg, Christopher and Mittal, Sailesh and Patel, Jignesh M. and Ramasamy, Karthik and Taneja, Siddarth},
booktitle = {{Proceedings of the ACM SIGMOD International Conference on Management of Data}},
doi = {10.1145/2723372.2742788},
isbn = {9781450327589},
title = {{Twitter Heron: Stream Processing at Scale}},
year = {2015}
}

@inproceedings{Neumeyer2010,
author = {Neumeyer, Leonardo and Robbins, Bruce and Nair, Anish and Kesari, Anand},
booktitle = {{Proceedings - IEEE International Conference on Data Mining, ICDM}},
doi = {10.1109/ICDMW.2010.172},
isbn = {9780769542577},
issn = {15504786},
keywords = {Actors programming model,Complex event processing,Concurrent programming,Data processing,Distributed programming,Map-reduce,Middleware,Parallel programming,Real-time search,Software design,Stream computing},
pmid = {12006203},
title = {{S4: Distributed stream computing platform}},
year = {2010}
}

@online{trident,
title = "{{Trident}}",
url = "https://storm.apache.org/releases/current/Trident-tutorial.html",
note = "Last access: March 2019",
author = "{Apache Storm}",
year = "2019"
}

@online{cassandra,
  author = "",
  year = "2019",
  title = "{{Apache Cassandra}}",
url = "http://cassandra.apache.org",
  note = "Last access: October 2019",
  date = "2019"
}



@online{samza:statemanagement,
title = "{{Samza - State Management}}",
url = "https://samza.apache.org/learn/documentation/0.12/container/state-management",
note = "Accessed on 7th March 2019",
author = "{Apache}",
date = "2017"
}

@online{kafka,
title = "{{Kafka}}",
url = "https://kafka.apache.org/",
note = "Accessed on 7th March 2019",
author = "{Apache}",
date = "2019"
}

@online{flink:state-fault-tolerance,
title = "{{Flink - State \& Fault Tolerance}}",
url = "https://ci.apache.org/projects/flink/flink-docs-release-1.7/dev/stream/state/",
note = "Accessed on 7th March 2019",
author = "{Apache}",
date = "2019"
}

@online{flink:working-with-state,
title = "{{Flink - Working with State}}",
url = "https://ci.apache.org/projects/flink/flink-docs-release-1.7/dev/stream/state/state.html",
note = "Accessed on 7th March 2019",
author = "{Apache}",
date = "2019"
}



@article{flink:incrementalcheckpointing,
  author    = {Paris Carbone and
               Gyula F{\'{o}}ra and
               Stephan Ewen and
               Seif Haridi and
               Kostas Tzoumas},
  title     = "{Lightweight Asynchronous Snapshots for Distributed Dataflows}",
  journal   = {CoRR},
  volume    = {abs/1506.08603},
  year      = {2015},
  url       = {http://arxiv.org/abs/1506.08603},
  archivePrefix = {arXiv},
  eprint    = {1506.08603},
  timestamp = {Mon, 13 Aug 2018 16:47:45 +0200},
  biburl    = {https://dblp.org/rec/bib/journals/corr/CarboneFEHT15},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@online{flink:broadcaststate,
title = "{{A Practical Guide to Broadcast State in Apache Flink}}",
url = "https://www.ververica.com/blog/a-practical-guide-to-broadcast-state-in-apache-flink",
note = "Accessed on 12th March 2019",
author = "{Fabian Hueske}",
date = "2018"
}


@article{Carbone2017,
 author = {Carbone, Paris and Ewen, Stephan and F\'{o}ra, Gyula and Haridi, Seif and Richter, Stefan and Tzoumas, Kostas},
 title = {{State management in Apache Flink{\textregistered}: Consistent Stateful Distributed Stream Processing}},
 journal = {Proceedings of the VLDB Endowment},
 issue_date = {August 2017},
 volume = {10},
 number = {12},
 month = aug,
 year = {2017},
 issn = {2150-8097},
 pages = {1718--1729},
 numpages = {12},
 url = {https://doi.org/10.14778/3137765.3137777},
 doi = {10.14778/3137765.3137777},
 acmid = {3137777},
 publisher = {VLDB Endowment},
}


@article{Noghabi2017,
archivePrefix = {arXiv},
arxivId = {1707.01747},
author = {Noghabi, Shadi A. and Paramasivam, Kartik and Pan, Yi and Ramesh, Navina and Bringhurst, Jon and Gupta, Indranil and Campbell, Roy H.},
doi = {10.14778/3137765.3137770},
eprint = {1707.01747},
isbn = {0998133108},
issn = {21508097},
journal = {Proceedings of the VLDB Endowment},
number = {12},
pages = {1634--1645},
pmid = {25246403},
title = {{Samza}},
url = {http://dl.acm.org/citation.cfm?doid=3137765.3137770},
volume = {10},
year = {2017}
}

@online{ec2:pricing,
title = "{{EC2 Pricing}}",
url = "https://aws.amazon.com/ec2/pricing/on-demand/",
note = "Accessed on 13th March 2019",
author = "{Amazon}",
date = "2019"
}

@online{ec2:instances,
title = "{{EC2 Instance Types}}",
url = "https://aws.amazon.com/ec2/instance-types/",
note = "Accessed on 26th July 2019",
author = "{Amazon}",
date = "2019"
}

@article{Cetintemel2014,
 author = {Cetintemel, Ugur and Du, Jiang and Kraska, Tim and Madden, Samuel and Maier, David and Meehan, John and Pavlo, Andrew and Stonebraker, Michael and Sutherland, Erik and Tatbul, Nesime and Tufte, Kristin and Wang, Hao and Zdonik, Stanley},
 title = {{S-Store: A Streaming NewSQL System for Big Velocity Applications}},
 journal = {Proceedings of the VLDB Endowment},
 issue_date = {August 2014},
 volume = {7},
 number = {13},
 month = aug,
 year = {2014},
 issn = {2150-8097},
 pages = {1633--1636},
 numpages = {4},
 url = {http://dx.doi.org/10.14778/2733004.2733048},
 doi = {10.14778/2733004.2733048},
 acmid = {2733048},
 publisher = {VLDB Endowment},
}

@article{Jacques-silva2016,
 author = {Jacques-Silva, Gabriela and Zheng, Fang and Debrunner, Daniel and Wu, Kun-Lung and Dogaru, Victor and Johnson, Eric and Spicer, Michael and Sariy\"{u}ce, Ahmet Erdem},
 title = {{Consistent Regions: Guaranteed Tuple Processing in IBM Streams}},
 journal = {Proceedings of the VLDB Endowment},
 issue_date = {September 2016},
 volume = {9},
 number = {13},
 month = sep,
 year = {2016},
 issn = {2150-8097},
 pages = {1341--1352},
 numpages = {12},
 url = {https://doi.org/10.14778/3007263.3007272},
 doi = {10.14778/3007263.3007272},
 acmid = {3007272},
 publisher = {VLDB Endowment},
}

@book{Tanenbaum2014,
 author = {Tanenbaum, Andrew S. and Bos, Herbert},
 title = {{Modern Operating Systems}},
 year = {2014},
 isbn = {9780133591620},
 edition = {4th},
 publisher = {Prentice Hall Press},
 address = {Upper Saddle River, NJ, USA},
}

@inproceedings{Prasaad2019,
 author = {Prasaad, Guna and Chandramouli, Badrish and Kossmann, Donald},
 title = {{Concurrent Prefix Recovery: Performing CPR on a Database}},
 booktitle = {{Proceedings of the 2019 International Conference on Management of Data}},
 series = {SIGMOD '19},
 year = {2019},
 isbn = {978-1-4503-5643-5},
 location = {Amsterdam, Netherlands},
 pages = {687--704},
 numpages = {18},
 url = {http://doi.acm.org/10.1145/3299869.3300090},
 doi = {10.1145/3299869.3300090},
 acmid = {3300090},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {checkpoint, database, durability, failure, group commit, key-value stores, persistence, recovery, transactions},
}


@article{Astrahan1976,
author = {Astrahan, M M and Mehl, J W and Putzolu, G R and Traiger, I L and Wade, B W and Watson, V and Blasgen, M W and Chamberlin, D D and Eswaran, K P and Gray, J N and Griffiths, P P and King, W F and Lorie, R A and McJones, P R},
journal = {ACM Transactions on Database Systems},
title = {{System R: relational approach to database management}},
year = {1976}
}

@online{timely_dataflow,
title = "{{Timely Dataflow}}",
url = "https://github.com/TimelyDataflow/timely-dataflow",
note = "Accessed on 2nd April 2019",
author = "{Frank McSherry}",
year = "2019"
}

@inproceedings{Murray2013,
author = {Murray, Derek G and McSherry, Frank and Isaacs, Rebecca and Isard, Michael and Barham, Paul and Abadi, Mart{\'{i}}n},
booktitle = {{SOSP '13: Proceedings of the Twenty-Fourth ACM Symposium on Operating Systems Principles}},
isbn = {978-1-4503-2388-8},
title = {{Naiad: a timely dataflow system}},
year = {2013}
}

@mastersthesis{Wicki2016,
author = {Wicki, Sebastian},
school = {ETH Z\"urich},
title = {{An Online Stream Processor for Timely Dataflow}},
year = {2016}
}

@inproceedings{Dean2004,
archivePrefix = {arXiv},
arxivId = {10.1.1.163.5292},
author = {Dean, Jeffrey and Ghemawat, Sanjay},
booktitle = {{Proceedings of 6th Usenix Symposium on Operating Systems Design and Implementation (OSDI '04)}},
doi = {10.1145/1327452.1327492},
eprint = {10.1.1.163.5292},
isbn = {9781595936868},
issn = {00010782},
pmid = {11687618},
title = {{MapReduce: Simplied Data Processing on Large Clusters}},
year = {2004}
}

@article{Fallis2010,
archivePrefix = {arXiv},
arxivId = {arXiv:1011.1669v3},
author = {Fallis, A.G},
doi = {10.1017/CBO9781107415324.004},
eprint = {arXiv:1011.1669v3},
isbn = {9788578110796},
issn = {1098-6596},
journal = {Sldies},
keywords = {icle},
pmid = {25246403},
title = {{Spark: Cluster Computing with Working Sets}},
year = {2010}
}

@online{rust_ffi,
title = "{{Rust Once, Run Everywhere}}",
url = "https://blog.rust-lang.org/2015/04/24/Rust-Once-Run-Everywhere.html",
note = "Accessed on 16th May 2019",
author = "{Alex Crichton}",
date = "2015"
}

@online{faster-rs,
  author = "Brookes, Matthew and Meldrum, Max",
  year = "2019",
  title = "{{faster-rs}}",
  url = "https://github.com/faster-rs/faster-rs",
  note = "Accessed on 20th May 2019",
  date = "2019"
}

@online{faster_repo,
  author = "",
  year = "2019",
  title = "{{FASTER}}",
  url = "https://github.com/microsoft/FASTER",
  note = "Last access: October 2019",
  date = "2019"
}

@online{rust-bindgen,
title = "{{bindgen}}",
url = "https://github.com/rust-lang/rust-bindgen",
note = "Accessed on 20th May 2019",
author = "{Rust-Lang}",
date = "2019"
}

@online{bincode,
title = "{{bincode}}",
url = "https://github.com/TyOverby/bincode",
note = "Accessed on 20th May 2019",
author = "{TyOverby}",
date = "2019"
}

@online{serde,
title = "{{serde}}",
url = "https://github.com/serde-rs/serde",
note = "Accessed on 20th May 2019",
author = "{serde-rs}",
date = "2019"
}

@inproceedings{ycsb,
 author = {Cooper, Brian F. and Silberstein, Adam and Tam, Erwin and Ramakrishnan, Raghu and Sears, Russell},
 title = "{{Benchmarking Cloud Serving Systems with YCSB}}",
 booktitle = {{Proceedings of the 1st ACM Symposium on Cloud Computing}},
 series = {SoCC '10},
 year = {2010},
 isbn = {978-1-4503-0036-0},
 location = {Indianapolis, Indiana, USA},
 pages = {143--154},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/1807128.1807152},
 doi = {10.1145/1807128.1807152},
 acmid = {1807152},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {benchmarking, cloud serving database},
}

@inproceedings{birte,
 author = {Brookes, Matthew and Kalavri, Vasiliki and Liagouris, John},
 title = {{FASTER State Management for Timely Dataflow}},
 booktitle = {{Proceedings of the International Workshop on Real-Time Business Intelligence and Analytics}},
 series = {BIRTE '19},
 year = {2019},
 isbn = {978-1-4503-7660-0},
 location = {Los Angeles, CA, USA},
 numpages = {3},
 url = {http://doi.acm.org/10.1145/3350489.3350493},
 doi = {10.1145/3350489.3350493},
 publisher = {ACM},
 address = {New York, NY, USA},
} 

@online{libaio,
title = "{{The Linux-native asynchronous I/O facility}}",
url = "https://pagure.io/libaio",
note = "Accessed on 1st March 2019",
author = "Jeffrey Moyer",
date = "2019"
}

@techreport{nexmark-paper,
  title={{NEXMark---A Benchmark for Queries over Data Streams}},
  author={Pete Tucker and Kristin Tufte and Vassilis Papadimos and David Maier},
  year={2002},
  institution={OGI School of Science \& Engineering at OHSU}
}

@online{nexmark-queries,
author = {Pete Tucker and Kristin Tufte and Vassilis Papadimos and David Maier},
title = "{{Nexmark Benchmark Suite}}",
url = "https://web.archive.org/web/20100620010601/http://datalab.cs.pdx.edu/niagaraST/NEXMark/",
note = "Last access: October 2019",
  year={2002},
}


@online{nexmark-website,
author = "Apache Beam",
title = "{{Nexmark Benchmark Suite}}",
url = "https://beam.apache.org/documentation/sdks/java/testing/nexmark/",
note = "Last access: October 2019",
year = "2019",
}

@online{rust-vec,
title = "{{Vec<T>}}",
url = "https://doc.rust-lang.org/std/vec/struct.Vec.html",
note = "Accessed on 8th August 2019",
author = "Rust Programming Language",
date = "2019"
}

@online{rocksdb_rust,
author = "",
title = "{{RocksDB Rust Wrapper}}",
url = "https://github.com/rust-rocksdb/rust-rocksdb",
note = "Last access: October 2019",
year = "2019",
}



@article{Dean:2013:TS:2408776.2408794,
 author = {Dean, Jeffrey and Barroso, Luiz Andr{\'e}},
 title = {{The Tail at Scale}},
 journal = {Commun. ACM},
 issue_date = {February 2013},
 volume = {56},
 number = {2},
 month = feb,
 year = {2013},
 issn = {0001-0782},
 pages = {74--80},
 numpages = {7},
 url = {http://doi.acm.org/10.1145/2408776.2408794},
 doi = {10.1145/2408776.2408794},
 acmid = {2408794},
 publisher = {ACM},
 address = {New York, NY, USA},
}

@inproceedings{ds2,
 author = {Kalavri, Vasiliki and Liagouris, John and Hoffmann, Moritz and Dimitrova, Desislava and Forshaw, Matthew and Roscoe, Timothy},
 title = {Three Steps is All You Need: Fast, Accurate, Automatic Scaling Decisions for Distributed Streaming Dataflows},
 booktitle = {Proceedings of the 12th USENIX Conference on Operating Systems Design and Implementation},
 series = {OSDI'18},
 year = {2018},
 isbn = {978-1-931971-47-8},
 location = {Carlsbad, CA, USA},
 pages = {783--798},
 numpages = {16},
 url = {http://dl.acm.org/citation.cfm?id=3291168.3291226},
 acmid = {3291226},
 publisher = {USENIX Association},
 address = {Berkeley, CA, USA},
} 

@article{megaphone,
  title={Megaphone: Latency-conscious state migration for distributed streaming dataflows},
  author={Hoffmann, Moritz and Lattuada, Andrea and McSherry, Frank and Kalavri, Vasiliki and Liagouris, John and Roscoe, Timothy},
  journal={Proceedings of the VLDB Endowment},
  volume={12},
  number={9},
  year={2019}
}

@inproceedings{chen2016realtime,
  title={Realtime data processing at Facebook},
  author={Chen, Guoqiang Jerry and Wiener, Janet L and Iyer, Shridhar and Jaiswal, Anshul and Lei, Ran and Simha, Nikhil and Wang, Wei and Wilfong, Kevin and Williamson, Tim and Yilmaz, Serhat},
  booktitle={Proceedings of the 2016 International Conference on Management of Data},
  pages={1087--1098},
  year={2016},
  organization={ACM}
}

@article{noghabi2017samza,
  title={Samza: stateful scalable stream processing at LinkedIn},
  author={Noghabi, Shadi A and Paramasivam, Kartik and Pan, Yi and Ramesh, Navina and Bringhurst, Jon and Gupta, Indranil and Campbell, Roy H},
  journal={Proceedings of the VLDB Endowment},
  volume={10},
  number={12},
  pages={1634--1645},
  year={2017},
  publisher={VLDB Endowment}
}

@inproceedings{mcsherry2013differential,
  title={Differential Dataflow.},
  author={McSherry, Frank and Murray, Derek Gordon and Isaacs, Rebecca and Isard, Michael},
  booktitle={CIDR},
  year={2013}
}

%%% window papers
@inproceedings{krishnamurthy2006fly,
  title={On-the-fly sharing for streamed aggregation},
  author={Krishnamurthy, Sailesh and Wu, Chung and Franklin, Michael},
  booktitle={Proceedings of the 2006 ACM SIGMOD international conference on Management of data},
  pages={623--634},
  year={2006},
  organization={ACM}
}

@inproceedings{traub2019efficient,
  title={Efficient Window Aggregation with General Stream Slicing.},
  author={Traub, Jonas and Grulich, Philipp M and Cu{\'e}llar, Alejandro Rodr{\'\i}guez and Bre{\ss}, Sebastian and Katsifodimos, Asterios and Rabl, Tilmann and Markl, Volker},
  booktitle={EDBT},
  pages={97--108},
  year={2019}
}

@inproceedings{DBLP:conf/icde/KarimovRKSHM18,
  author    = {Jeyhun Karimov and
               Tilmann Rabl and
               Asterios Katsifodimos and
               Roman Samarev and
               Henri Heiskanen and
               Volker Markl},
  title     = {Benchmarking Distributed Stream Data Processing Systems},
  booktitle = {34th {IEEE} International Conference on Data Engineering, {ICDE} 2018,
               Paris, France, April 16-19, 2018},
  pages     = {1507--1518},
  publisher = {{IEEE} Computer Society},
  year      = {2018},
  url       = {https://doi.org/10.1109/ICDE.2018.00169},
  doi       = {10.1109/ICDE.2018.00169},
  timestamp = {Wed, 16 Oct 2019 14:14:56 +0200},
  biburl    = {https://dblp.org/rec/conf/icde/KarimovRKSHM18.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@article{tangwongsan2015general,
  title={General incremental sliding-window aggregation},
  author={Tangwongsan, Kanat and Hirzel, Martin and Schneider, Scott and Wu, Kun-Lung},
  journal={Proceedings of the VLDB Endowment},
  volume={8},
  number={7},
  pages={702--713},
  year={2015},
  publisher={VLDB Endowment}
}

@article{li2005no,
  title={No pane, no gain: efficient evaluation of sliding-window aggregates over data streams.},
  author={Li, Jin and Maier, David and Tufte, Kristin and Papadimos, Vassilis and Tucker, Peter A},
  journal={SIGMOD Record},
  volume={34},
  number={1},
  pages={39--44},
  year={2005}
}

@article{botan2010secret,
  title={SECRET: a model for analysis of the execution semantics of stream processing systems},
  author={Botan, Irina and Derakhshan, Roozbeh and Dindar, Nihal and Haas, Laura and Miller, Ren{\'e}e J and Tatbul, Nesime},
  journal={Proceedings of the VLDB Endowment},
  volume={3},
  number={1-2},
  pages={232--243},
  year={2010},
  publisher={VLDB Endowment}
}

@inproceedings{carbone2016cutty,
  title={Cutty: Aggregate sharing for user-defined windows},
  author={Carbone, Paris and Traub, Jonas and Katsifodimos, Asterios and Haridi, Seif and Markl, Volker},
  booktitle={Proceedings of the 25th ACM International on Conference on Information and Knowledge Management},
  pages={1201--1210},
  year={2016},
  organization={ACM}
}

%%% rocksdb-overheads

@misc{rocks-ververica,
title = "{How to manage your RocksDB memory size in Apache Flink}",
howpublished = {\url{https://www.ververica.com/blog/manage-rocksdb-memory-size-apache-flink}},
note = "Last access: October 2021",
date = "2021"
}

@inproceedings {Balmau1029SILK,
author = {Oana Balmau and Florin Dinu and Willy Zwaenepoel and Karan Gupta and Ravishankar Chandhiramoorthi and Diego Didona},
title = {{SILK}: Preventing Latency Spikes in Log-Structured Merge Key-Value Stores},
booktitle = {2019 {USENIX} Annual Technical Conference ({USENIX} {ATC} 19)},
year = {2019},
isbn = {978-1-939133-03-8},
address = {Renton, WA},
pages = {753--766},
url = {https://www.usenix.org/conference/atc19/presentation/balmau},
publisher = {{USENIX} Association},
month = jul,
}

@inproceedings{idreos2018data,
  title={The data calculator: Data structure design and cost synthesis from first principles and learned cost models},
  author={Idreos, Stratos and Zoumpatianos, Kostas and Hentschel, Brian and Kester, Michael S and Guo, Demi},
  booktitle={Proceedings of the 2018 International Conference on Management of Data},
  pages={535--550},
  year={2018},
  organization={ACM}
}

@inproceedings{idreos2019auto,
  title={From auto-tuning one size fits all to self-designed and learned data-intensive systems},
  author={Idreos, Stratos and Kraska, Tim},
  booktitle={ACM SIGMOD},
  year={2019}
}

@inproceedings{li2005semantics,
  title={Semantics and evaluation techniques for window aggregates in data streams},
  author={Li, Jin and Maier, David and Tufte, Kristin and Papadimos, Vassilis and Tucker, Peter A},
  booktitle={Proceedings of the 2005 ACM SIGMOD international conference on Management of data},
  pages={311--322},
  year={2005}
}

@article{reiss2011google,
  title={Google cluster-usage traces: format+ schema},
  author={Reiss, Charles and Wilkes, John and Hellerstein, Joseph L},
  journal={Google Inc., White Paper},
  pages={1--14},
  year={2011}
}

@misc{taxi-data,
title = "{NYC TLC Trip Record Data}",
howpublished = {\url{https://www1.nyc.gov/site/tlc/about/tlc-trip-record-data.page}},
note = "Last access: October 2021",
date = "2021"
}

@misc{rocks-backend,
title = "{The RocksDB State Backend}",
howpublished = {\url{https://ci.apache.org/projects/flink/flink-docs-release-1.9/ops/state/state_backends.html#the-rocksdbstatebackend}},
note = "Last access: October 2021",
date = "2021"
}

@misc{flink:backend,
title = "{Stateful Stream Processing: Apache Flink State Backends}",
howpublished = {\url{https://www.ververica.com/blog/stateful-stream-processing-apache-flink-state-backends}},
note = "October 2021",
date = "2021"
}

@inproceedings{cortez2017resource,
  title={Resource central: Understanding and predicting workloads for improved resource management in large cloud platforms},
  author={Cortez, Eli and Bonde, Anand and Muzio, Alexandre and Russinovich, Mark and Fontoura, Marcus and Bianchini, Ricardo},
  booktitle={Proceedings of the 26th Symposium on Operating Systems Principles},
  pages={153--167},
  year={2017}
}

@article{chintapalli2015benchmarking,
  title={Benchmarking streaming computation engines at yahoo!},
  author={Chintapalli, Sanket and Dagit, Derek and Evans, Bobby and Farivar, Reza and Graves, Tom and Holderbaugh, Mark and Liu, Zhuo and Nusbaum, Kyle and Patil, Kishorkumar and Peng, Boyang and others},
  journal={Tech. Rep.},
  year={2015}
}

@article{shukla2017riotbench,
  title={Riotbench: An iot benchmark for distributed stream processing systems},
  author={Shukla, Anshu and Chaturvedi, Shilpa and Simmhan, Yogesh},
  journal={Concurrency and Computation: Practice and Experience},
  volume={29},
  number={21},
  pages={e4257},
  year={2017},
  publisher={Wiley Online Library}
}

@article{bol1965tables,
  title={Tables in Mathematical Statistics},
  author={Bol'Shev, LN and Smirnov, NV},
  journal={Tables in Mathematical Statistics [in Russian},
  year={1965}
}

@inproceedings{wires2014characterizing,
  title={Characterizing storage workloads with counter stacks},
  author={Wires, Jake and Ingram, Stephen and Drudi, Zachary and Harvey, Nicholas JA and Warfield, Andrew},
  booktitle={11th $\{$USENIX$\}$ Symposium on Operating Systems Design and Implementation ($\{$OSDI$\}$ 14)},
  pages={335--349},
  year={2014}
}

@inproceedings{almeida1996characterizing,
  title={Characterizing reference locality in the WWW},
  author={Almeida, Virgilio and Bestavros, Azer and Crovella, Mark and De Oliveira, Adriana},
  booktitle={Fourth International Conference on Parallel and Distributed Information Systems},
  pages={92--103},
  year={1996},
  organization={IEEE}
}

@article{mattson1970evaluation,
  title={Evaluation techniques for storage hierarchies},
  author={Mattson, Richard L. and Gecsei, Jan and Slutz, Donald R. and Traiger, Irving L.},
  journal={IBM Systems journal},
  volume={9},
  number={2},
  pages={78--117},
  year={1970},
  publisher={IBM}
}

@inproceedings{srivastava2004flexible,
  title={Flexible time management in data stream systems},
  author={Srivastava, Utkarsh and Widom, Jennifer},
  booktitle={Proceedings of the twenty-third ACM SIGMOD-SIGACT-SIGART symposium on Principles of database systems},
  pages={263--274},
  year={2004}
}

@inproceedings{MeasurementsDS,
  title={Measurements of a distributed file system},
  author={Baker, Mary G and Hartman, John H and Kupfer, Michael D and Shirriff, Ken W and Ousterhout, John K},
  booktitle={Proceedings of the thirteenth ACM symposium on Operating systems principles},
  pages={198--212},
  year={1991}
}


@inproceedings {Segcache,
author = {Juncheng Yang and Yao Yue and Rashmi Vinayak},
title = {Segcache: a memory-efficient and scalable in-memory key-value cache for small objects},
booktitle = {18th {USENIX} Symposium on Networked Systems Design and Implementation ({NSDI} 21)},
year = {2021},
isbn = {978-1-939133-21-2},
pages = {503--518},
url = {https://www.usenix.org/conference/nsdi21/presentation/yang-juncheng},
publisher = {{USENIX} Association},
month = apr,
}


@inproceedings {Twitter,
author = {Juncheng Yang and Yao Yue and K. V. Rashmi},
title = {A large scale analysis of hundreds of in-memory cache clusters at Twitter},
booktitle = {14th {USENIX} Symposium on Operating Systems Design and Implementation ({OSDI} 20)},
year = {2020},
isbn = {978-1-939133-19-9},
pages = {191--208},
url = {https://www.usenix.org/conference/osdi20/presentation/yang},
publisher = {{USENIX} Association},
month = nov,
}


@inproceedings{flodb,
author = {Balmau, Oana and Guerraoui, Rachid and Trigonakis, Vasileios and Zablotchi, Igor},
title = {FloDB: Unlocking Memory in Persistent Key-Value Stores},
year = {2017},
isbn = {9781450349383},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3064176.3064193},
doi = {10.1145/3064176.3064193},
abstract = {Log-structured merge (LSM) data stores enable to store and process large volumes of
data while maintaining good performance. They mitigate the I/O bottleneck by absorbing
updates in a memory layer and transferring them to the disk layer in sequential batches.
Yet, the LSM architecture fundamentally requires elements to be in sorted order. As
the amount of data in memory grows, maintaining this sorted order becomes increasingly
costly. Contrary to intuition, existing LSM systems could actually lose throughput
with larger memory components.In this paper, we introduce FloDB, an LSM memory component
architecture which allows throughput to scale on modern multicore machines with ample
memory sizes. The main idea underlying FloDB is essentially to bootstrap the traditional
LSM architecture by adding a small in-memory buffer layer on top of the memory component.
This buffer offers low-latency operations, masking the write latency of the sorted
memory component. Integrating this buffer in the classic LSM memory component to obtain
FloDB is not trivial and requires revisiting the algorithms of the user-facing LSM
operations (search, update, scan). FloDB's two layers can be implemented with state-of-the-art,
highly-concurrent data structures. This way, as we show in the paper, FloDB eliminates
significant synchronization bottlenecks in classic LSM designs, while offering a rich
LSM API.We implement FloDB as an extension of LevelDB, Google's popular LSM key-value
store. We compare FloDB's performance to that of state-of-the-art LSMs. In short,
FloDB's performance is up to one order of magnitude higher than that of the next best-performing
competitor in a wide range of multi-threaded workloads.},
booktitle = {Proceedings of the Twelfth European Conference on Computer Systems},
pages = {80â€“94},
numpages = {15},
location = {Belgrade, Serbia},
series = {EuroSys '17}
}




@inproceedings{facebookMemcache,
author = {Atikoglu, Berk and Xu, Yuehai and Frachtenberg, Eitan and Jiang, Song and Paleczny, Mike},
title = {Workload Analysis of a Large-Scale Key-Value Store},
year = {2012},
isbn = {9781450310970},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2254756.2254766},
doi = {10.1145/2254756.2254766},
abstract = {Key-value stores are a vital component in many scale-out enterprises, including social
networks, online retail, and risk analysis. Accordingly, they are receiving increased
attention from the research community in an effort to improve their performance, scalability,
reliability, cost, and power consumption. To be effective, such efforts require a
detailed understanding of realistic key-value workloads. And yet little is known about
these workloads outside of the companies that operate them. This paper aims to address
this gap.To this end, we have collected detailed traces from Facebook's Memcached
deployment, arguably the world's largest. The traces capture over 284 billion requests
from five different Memcached use cases over several days. We analyze the workloads
from multiple angles, including: request composition, size, and rate; cache efficacy;
temporal patterns; and application use cases. We also propose a simple model of the
most representative trace to enable the generation of more realistic synthetic workloads
by the community.Our analysis details many characteristics of the caching workload.
It also reveals a number of surprises: a GET/SET ratio of 30:1 that is higher than
assumed in the literature; some applications of Memcached behave more like persistent
storage than a cache; strong locality metrics, such as keys accessed many millions
of times a day, do not always suffice for a high hit rate; and there is still room
for efficiency and hit rate improvements in Memcached's implementation. Toward the
last point, we make several suggestions that address the exposed deficiencies.},
booktitle = {Proceedings of the 12th ACM SIGMETRICS/PERFORMANCE Joint International Conference on Measurement and Modeling of Computer Systems},
pages = {53â€“64},
numpages = {12},
keywords = {workload modeling, workload analysis, memcached, key-value store},
location = {London, England, UK},
series = {SIGMETRICS '12}
}




@inproceedings{linkBench,
author = {Armstrong, Timothy G. and Ponnekanti, Vamsi and Borthakur, Dhruba and Callaghan, Mark},
title = {LinkBench: A Database Benchmark Based on the Facebook Social Graph},
year = {2013},
isbn = {9781450320375},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2463676.2465296},
doi = {10.1145/2463676.2465296},
abstract = {Database benchmarks are an important tool for database researchers and practitioners
that ease the process of making informed comparisons between different database hardware,
software and configurations. Large scale web services such as social networks are
a major and growing database application area, but currently there are few benchmarks
that accurately model web service workloads.In this paper we present a new synthetic
benchmark called LinkBench. LinkBench is based on traces from production databases
that store "social graph" data at Facebook, a major social network. We characterize
the data and query workload in many dimensions, and use the insights gained to construct
a realistic synthetic benchmark. LinkBench provides a realistic and challenging test
for persistent storage of social and web service data, filling a gap in the available
tools for researchers, developers and administrators.},
booktitle = {Proceedings of the 2013 ACM SIGMOD International Conference on Management of Data},
pages = {1185â€“1196},
numpages = {12},
keywords = {social networks, database workload analysis, mysql, hbase, database benchmarks},
location = {New York, New York, USA},
series = {SIGMOD '13}
}


@inproceedings {KalavriInSupport20,
author = {Vasiliki Kalavri and John Liagouris},
title = {In support of workload-aware streaming state management},
booktitle = {12th {USENIX} Workshop on Hot Topics in Storage and File Systems (HotStorage 20)},
year = {2020},
url = {https://www.usenix.org/conference/hotstorage20/presentation/kalavri},
publisher = {{USENIX} Association},
month = jul,
}



@inproceedings {facebookRocks,
author = {Zhichao Cao and Siying Dong and Sagar Vemuri and David H.C. Du},
title = {Characterizing, Modeling, and Benchmarking RocksDB Key-Value Workloads at Facebook},
booktitle = {18th {USENIX} Conference on File and Storage Technologies ({FAST} 20)},
year = {2020},
isbn = {978-1-939133-12-0},
address = {Santa Clara, CA},
pages = {209--223},
url = {https://www.usenix.org/conference/fast20/presentation/cao-zhichao},
publisher = {{USENIX} Association},
month = feb,
}

@inproceedings {cachelib,
author = {Benjamin Berg and Daniel S. Berger and Sara McAllister and Isaac Grosof and Sathya Gunasekar and Jimmy Lu and Michael Uhlar and Jim Carrig and Nathan Beckmann and Mor Harchol-Balter and Gregory R. Ganger},
title = {The CacheLib Caching Engine: Design and Experiences at Scale},
booktitle = {14th {USENIX} Symposium on Operating Systems Design and Implementation ({OSDI} 20)},
year = {2020},
isbn = {978-1-939133-19-9},
pages = {753--768},
url = {https://www.usenix.org/conference/osdi20/presentation/berg},
publisher = {{USENIX} Association},
month = nov,
}


@INPROCEEDINGS{bigDataBench,  author={Wang, Lei and Zhan, Jianfeng and Luo, Chunjie and Zhu, Yuqing and Yang, Qiang and He, Yongqiang and Gao, Wanling and Jia, Zhen and Shi, Yingjie and Zhang, Shujie and Zheng, Chen and Lu, Gang and Zhan, Kent and Li, Xiaona and Qiu, Bizhu},  booktitle={2014 IEEE 20th International Symposium on High Performance Computer Architecture (HPCA)},   title={BigDataBench: A big data benchmark suite from internet services},   year={2014},  volume={},  number={},  pages={488-499},  doi={10.1109/HPCA.2014.6835958}}

@inproceedings{smallcache,
author = {Fan, Bin and Lim, Hyeontaek and Andersen, David G. and Kaminsky, Michael},
title = {Small Cache, Big Effect: Provable Load Balancing for Randomly Partitioned Cluster Services},
year = {2011},
isbn = {9781450309769},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2038916.2038939},
doi = {10.1145/2038916.2038939},
abstract = {Load balancing requests across a cluster of back-end servers is critical for avoiding
performance bottlenecks and meeting service-level objectives (SLOs) in large-scale
cloud computing services. This paper shows how a small, fast popularity-based front-end
cache can ensure load balancing for an important class of such services; furthermore,
we prove an O(n log n) lower-bound on the necessary cache size and show that this
size depends only on the total number of back-end nodes n, not the number of items
stored in the system. We validate our analysis through simulation and empirical results
running a key-value storage system on an 85-node cluster.},
booktitle = {Proceedings of the 2nd ACM Symposium on Cloud Computing},
articleno = {23},
numpages = {12},
keywords = {performance, clusters, caching, load balancing},
location = {Cascais, Portugal},
series = {SOCC '11}
}

@article{flashbased,
author = {Huang, Sai and Wei, Qingsong and Feng, Dan and Chen, Jianxi and Chen, Cheng},
title = {Improving Flash-Based Disk Cache with Lazy Adaptive Replacement},
year = {2016},
issue_date = {February 2016},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {12},
number = {2},
issn = {1553-3077},
url = {https://doi.org/10.1145/2737832},
doi = {10.1145/2737832},
abstract = {For years, the increasing popularity of flash memory has been changing storage systems.
Flash-based solid-state drives (SSDs) are widely used as a new cache tier on top of
hard disk drives (HDDs) to speed up data-intensive applications. However, the endurance
problem of flash memory remains a concern and is getting worse with the adoption of
MLC and TLC flash. In this article, we propose a novel cache management algorithm
for flash-based disk cache named Lazy Adaptive Replacement Cache (LARC). LARC adopts
the idea of selective caching to filter out seldom accessed blocks and prevent them
from entering cache. This avoids cache pollution and preserves popular blocks in cache
for a longer period of time, leading to a higher hit rate. Meanwhile, by avoiding
unnecessary cache replacements, LARC reduces the volume of data written to the SSD
and yields an SSD-friendly access pattern. In this way, LARC improves the performance
and endurance of the SSD at the same time. LARC is self-tuning and incurs little overhead.
It has been extensively evaluated by both trace-driven simulations and synthetic benchmarks
on a prototype implementation. Our experiments show that LARC outperforms state-of-art
algorithms for different kinds of workloads and extends SSD lifetime by up to 15.7
times.},
journal = {ACM Trans. Storage},
month = feb,
articleno = {8},
numpages = {24},
keywords = {endurance, flash memory, Cache algorithm, solid-state drive}
}


@article{incbricks,
author = {Liu, Ming and Luo, Liang and Nelson, Jacob and Ceze, Luis and Krishnamurthy, Arvind and Atreya, Kishore},
title = {IncBricks: Toward In-Network Computation with an In-Network Cache},
year = {2017},
issue_date = {March 2017},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {45},
number = {1},
issn = {0163-5964},
url = {https://doi.org/10.1145/3093337.3037731},
doi = {10.1145/3093337.3037731},
abstract = {The emergence of programmable network devices and the increasing data traffic of datacenters
motivate the idea of in-network computation. By offloading compute operations onto
intermediate networking devices (e.g., switches, network accelerators, middleboxes),
one can (1) serve network requests on the fly with low latency; (2) reduce datacenter
traffic and mitigate network congestion; and (3) save energy by running servers in
a low-power mode. However, since (1) existing switch technology doesn't provide general
computing capabilities, and (2) commodity datacenter networks are complex (e.g., hierarchical
fat-tree topologies, multipath communication), enabling in-network computation inside
a datacenter is challenging.In this paper, as a step towards in-network computing,
we present IncBricks, an in-network caching fabric with basic computing primitives.
IncBricks is a hardware-software co-designed system that supports caching in the network
using a programmable network middlebox. As a key-value store accelerator, our prototype
lowers request latency by over 30% and doubles throughput for 1024 byte values in
a common cluster configuration. Our results demonstrate the effectiveness of in-network
computing and that efficient datacenter network request processing is possible if
we carefully split the computation across the different programmable computing elements
in a datacenter, including programmable switches, network accelerators, and end hosts.},
journal = {SIGARCH Comput. Archit. News},
month = apr,
pages = {795â€“809},
numpages = {15},
keywords = {in-network caching, programmable network devices}
}

@inproceedings{distcache,
author = {Liu, Zaoxing and Bai, Zhihao and Liu, Zhenming and Li, Xiaozhou and Kim, Changhoon and Braverman, Vladimir and Jin, Xin and Stoica, Ion},
title = {DistCache: Provable Load Balancing for Large-Scale Storage Systems with Distributed Caching},
year = {2019},
isbn = {9781931971485},
publisher = {USENIX Association},
address = {USA},
abstract = {Load balancing is critical for distributed storage to meet strict service-level objectives
(SLOs). It has been shown that a fast cache can guarantee load balancing for a clustered
storage system. However, when the system scales out to multiple clusters, the fast
cache itself would become the bottleneck. Traditional mechanisms like cache partition
and cache replication either result in load imbalance between cache nodes or have
high overhead for cache coherence.We present DistCache, a new distributed caching
mechanism that provides provable load balancing for large-scale storage systems. DistCache
co-designs cache allocation with cache topology and query routing. The key idea is
to partition the hot objects with independent hash functions between cache nodes in
different layers, and to adaptively route queries with the power-of-two-choices. We
prove that DistCache enables the cache throughput to increase linearly with the number
of cache nodes, by unifying techniques from expander graphs, network flows, and queuing
theory. DistCache is a general solution that can be applied to many storage systems.
We demonstrate the benefits of DistCache by providing the design, implementation,
and evaluation of the use case for emerging switch-based caching.},
booktitle = {Proceedings of the 17th USENIX Conference on File and Storage Technologies},
pages = {143â€“157},
numpages = {15},
location = {Boston, MA, USA},
series = {FAST'19}
}

@inproceedings{eccache,
author = {Rashmi, K. V. and Chowdhury, Mosharaf and Kosaian, Jack and Stoica, Ion and Ramchandran, Kannan},
title = {EC-Cache: Load-Balanced, Low-Latency Cluster Caching with Online Erasure Coding},
year = {2016},
isbn = {9781931971331},
publisher = {USENIX Association},
address = {USA},
abstract = {Data-intensive clusters and object stores are increasingly relying on in-memory object
caching to meet the I/O performance demands. These systems routinely face the challenges
of popularity skew, background load imbalance, and server failures, which result in
severe load imbalance across servers and degraded I/O performance. Selective replication
is a commonly used technique to tackle these challenges, where the number of cached
replicas of an object is proportional to its popularity. In this paper, we explore
an alternative approach using erasure coding.EC-Cache is a load-balanced, low latency
cluster cache that uses online erasure coding to overcome the limitations of selective
replication. EC-Cache employs erasure coding by: (i) splitting and erasure coding
individual objects during writes, and (ii) late binding, wherein obtaining any k out
of (k + r) splits of an object are sufficient, during reads. As compared to selective
replication, EC-Cache improves load balancing by more than 3\texttimes{} and reduces the median
and tail read latencies by more than 2\texttimes{}, while using the same amount of memory. EC-Cache
does so using 10% additional bandwidth and a small increase in the amount of stored
metadata. The benefits offered by EC-Cache are further amplified in the presence of
background network load imbalance and server failures.},
booktitle = {Proceedings of the 12th USENIX Conference on Operating Systems Design and Implementation},
pages = {401â€“417},
numpages = {17},
location = {Savannah, GA, USA},
series = {OSDI'16}
}

@inproceedings{NVMcached,
author = {Wu, Xingbo and Ni, Fan and Zhang, Li and Wang, Yandong and Ren, Yufei and Hack, Michel and Shao, Zili and Jiang, Song},
title = {NVMcached: An NVM-Based Key-Value Cache},
year = {2016},
isbn = {9781450342650},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2967360.2967374},
doi = {10.1145/2967360.2967374},
abstract = {As byte-addressable, high-density, and non-volatile memory (NVM) is around the corner
to be equipped alongside the DRAM memory, issues on enabling the important key-value
cache services, such as memcached, on the new storage medium must be addressed. While
NVM allows data in a KV cache to survive power outage and system crash, in practice
their integrity and accessibility depend on data consistency enforced during writes
to NVM. Though techniques for enforcing the consistency, such as journaling, COW,
or checkpointing, are available, they are often too expensive by frequently using
CPU cache flushes to ensure crash consistency, leading to (much) reduced performance
and excessively compromised NVM's lifetime.In this paper we design and evaluate NVMcached,
a KV cache for non-volatile byte-addressable memory that can significantly reduce
use of flushes and minimize data loss by leveraging consistency-friendly data structures
and batched space allocation and reclamation. Experiments show that NVMcached can
improve its system throughput by up to 2.8x for write-intensive real-world workloads,
compared to a non-volatile memcached.},
booktitle = {Proceedings of the 7th ACM SIGOPS Asia-Pacific Workshop on Systems},
articleno = {18},
numpages = {7},
location = {Hong Kong, Hong Kong},
series = {APSys '16}
}

@inproceedings{savingcash,
author = {Zhu, Timothy and Gandhi, Anshul and Harchol-Balter, Mor and Kozuch, Michael A.},
title = {Saving Cash by Using Less Cache},
year = {2012},
publisher = {USENIX Association},
address = {USA},
abstract = {Everyone loves a large caching tier in their multitier cloud-based web service because
it both alleviates database load and provides lower request latencies. Even when load
drops severely, administrators are reluctant to scale down their caching tier. This
paper makes the case that (i) scaling down the caching tier is viable with respect
to performance, and (ii) the savings are potentially huge; e.g., a 4x drop in load
can result in 90% savings in the caching tier size.},
booktitle = {Proceedings of the 4th USENIX Conference on Hot Topics in Cloud Ccomputing},
pages = {3},
numpages = {1},
location = {Boston, MA},
series = {HotCloud'12}
}

@inproceedings {SPEICHER,
author = {Maurice Bailleu and J{\"o}rg Thalheim and Pramod Bhatotia and Christof Fetzer and Michio Honda and Kapil Vaswani},
title = {{SPEICHER}: Securing LSM-based Key-Value Stores using Shielded Execution},
booktitle = {17th {USENIX} Conference on File and Storage Technologies ({FAST} 19)},
year = {2019},
isbn = {978-1-939133-09-0},
address = {Boston, MA},
pages = {173--190},
url = {https://www.usenix.org/conference/fast19/presentation/bailleu},
publisher = {{USENIX} Association},
month = feb,
}

@inproceedings {slmdb,
author = {Olzhas Kaiyrakhmet and Songyi Lee and Beomseok Nam and Sam H. Noh and Young-ri Choi},
title = {SLM-DB: Single-Level Key-Value Store with Persistent Memory},
booktitle = {17th {USENIX} Conference on File and Storage Technologies ({FAST} 19)},
year = {2019},
isbn = {978-1-939133-09-0},
address = {Boston, MA},
pages = {191--205},
url = {https://www.usenix.org/conference/fast19/presentation/kaiyrakhmet},
publisher = {{USENIX} Association},
month = feb,
}

@inproceedings {Ziggurat,
author = {Shengan Zheng and Morteza Hoseinzadeh and Steven Swanson},
title = {Ziggurat: A Tiered File System for Non-Volatile Main Memories and Disks},
booktitle = {17th {USENIX} Conference on File and Storage Technologies ({FAST} 19)},
year = {2019},
isbn = {978-1-939133-09-0},
address = {Boston, MA},
pages = {207--219},
url = {https://www.usenix.org/conference/fast19/presentation/zheng},
publisher = {{USENIX} Association},
month = feb,
}

@inproceedings{carbone2020beyond,
  title={Beyond analytics: the evolution of stream processing systems},
  author={Carbone, Paris and Fragkoulis, Marios and Kalavri, Vasiliki and Katsifodimos, Asterios},
  booktitle={Proceedings of the 2020 ACM SIGMOD international conference on Management of data},
  pages={2651--2658},
  year={2020}
}

@inproceedings{mei2020turbine,
  title={Turbine: Facebookâ€™s service management platform for stream processing},
  author={Mei, Yuan and Cheng, Luwei and Talwar, Vanish and Levin, Michael Y and Jacques-Silva, Gabriela and Simha, Nikhil and Banerjee, Anirban and Smith, Brian and Williamson, Tim and Yilmaz, Serhat and others},
  booktitle={2020 IEEE 36th International Conference on Data Engineering (ICDE)},
  pages={1591--1602},
  year={2020},
  organization={IEEE}
}

@inproceedings{kulkarni2015twitter,
  title={Twitter heron: Stream processing at scale},
  author={Kulkarni, Sanjeev and Bhagat, Nikunj and Fu, Maosong and Kedigehalli, Vikas and Kellogg, Christopher and Mittal, Sailesh and Patel, Jignesh M and Ramasamy, Karthik and Taneja, Siddarth},
  booktitle={Proceedings of the 2015 ACM SIGMOD International Conference on Management of Data},
  pages={239--250},
  year={2015}
}

@article{floratou2017dhalion,
  title={Dhalion: self-regulating stream processing in heron},
  author={Floratou, Avrilia and Agrawal, Ashvin and Graham, Bill and Rao, Sriram and Ramasamy, Karthik},
  journal={Proceedings of the VLDB Endowment},
  volume={10},
  number={12},
  pages={1825--1836},
  year={2017},
  publisher={VLDB Endowment}
}

@article{dayarathna2018recent,
  title={Recent advancements in event processing},
  author={Dayarathna, Miyuru and Perera, Srinath},
  journal={ACM Computing Surveys (CSUR)},
  volume={51},
  number={2},
  pages={1--36},
  year={2018},
  publisher={ACM New York, NY, USA}
}

@misc{aws-kinesis,
  title = "{Amazon Kinesis}",
  howpublished = {\url{https://aws.amazon.com/kinesis/}},
  note = "Last access: October 2021",
  date = "2021"
}

@misc{alibaba,
  title = "{Alibaba Realtime Compute}",
  howpublished = {\url{https://www.alibabacloud.com/product/realtime-compute}},
  note = "Last access: October 2021",
  date = "2021"
}

@misc{google-dataflow,
  title = "{Google Cloud Dataflow}",
  howpublished = {\url{https://cloud.google.com/dataflow}},
  note = "Last access: October 2021",
  date = "2021"
}

@misc{azure-streams,
  title = "{Azure Stream Analytics}",
  howpublished = {\url{https://azure.microsoft.com/en-us/services/stream-analytics/}},
  note = "Last access: October 2021",
  date = "2021"
}

@misc{pravega,
  title = "{Pravega}",
  howpublished = {\url{https://pravega.io}},
  note = "Last access: October 2021",
  date = "2021"
}

@inproceedings{cloud_cache_profiling,
author = {Saemundsson, Trausti and Bjornsson, Hjortur and Chockler, Gregory and Vigfusson, Ymir},
title = {Dynamic Performance Profiling of Cloud Caches},
year = {2014},
isbn = {9781450332521},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2670979.2671007},
doi = {10.1145/2670979.2671007},
abstract = {Large-scale in-memory object caches such as memcached are widely used to accelerate
popular web sites and to reduce burden on backend databases. Yet current cache systems
give cache operators limited information on what resources are required to optimally
accommodate the present workload. This paper focuses on a key question for cache operators:
how much total memory should be allocated to the in-memory cache tier to achieve desired
performance?We present our Mimir system: a lightweight online profiler that hooks
into the replacement policy of each cache server and produces graphs of the overall
cache hit rate as a function of memory size. The profiler enables cache operators
to dynamically project the cost and performance impact from adding or removing memory
resources within a distributed in-memory cache, allowing "what-if" questions about
cache performance to be answered without laborious offline tuning. Internally, Mimir
uses a novel lock-free algorithm and lookup filters for quickly and dynamically estimating
hit rate of LRU caches.Running Mimir as a profiler requires minimal changes to the
cache server, thanks to a lean API. Our experiments show that Mimir produces dynamic
hit rate curves with over 98% accuracy and 2--5% overhead on request latency and throughput
when Mimir is run in tandem with memcached, suggesting online cache profiling can
be a practical tool for improving provisioning of large caches.},
booktitle = {Proceedings of the ACM Symposium on Cloud Computing},
pages = {1â€“14},
numpages = {14},
keywords = {caching, miss-rate curves, profiling, hit-rate curves, memcached, LRU},
location = {Seattle, WA, USA},
series = {SOCC '14}
}


@INPROCEEDINGS{Realistic_benchmark,  author={Pitchumani, Rekha and Frank, Shayna and Miller, Ethan L.},  booktitle={2015 31st Symposium on Mass Storage Systems and Technologies (MSST)},   title={Realistic request arrival generation in storage benchmarks},   year={2015},  volume={},  number={},  pages={1-10},  doi={10.1109/MSST.2015.7208286}}

@inproceedings {counterStacks,
author = {Jake Wires and Stephen Ingram and Zachary Drudi and Nicholas J. A. Harvey and Andrew Warfield},
title = {Characterizing Storage Workloads with Counter Stacks},
booktitle = {11th {USENIX} Symposium on Operating Systems Design and Implementation ({OSDI} 14)},
year = {2014},
isbn = { 978-1-931971-16-4},
address = {Broomfield, CO},
pages = {335--349},
url = {https://www.usenix.org/conference/osdi14/technical-sessions/presentation/wires},
publisher = {{USENIX} Association},
month = oct,
}


